if(!accedo){var accedo=(function(){var require=(function(){var loadCounter=0,REQ_CONTEXT_PREFIX="req-context-",loadedScripts={},contextList={},head=document.getElementsByTagName("head")[0],objectCheckTimeout=100,objectCheckMaxWaitTime=10000,getContextsByDependency=function(name){var deps,i,contexts=[];for(context in contextList){if(contextList.hasOwnProperty(context)){deps=contextList[context].dependencies;i=deps.length;while(i--){if(deps[i]==name){contexts.push(context);break;}}}}return contexts;},checkObjForContext=function(contextName){if(!contextList[contextName]){return;}var context=contextList[contextName],deps=context.dependencies,scope=context.scope,i=deps.length,dep;context.checkTimes++;if(context.checkTimes*objectCheckTimeout>objectCheckMaxWaitTime){console.error("### Missing one or more dependency out of the list",deps);throw new Error("Required dependancies are missing and cannot be loaded, wait timeout reached");return;}while(i--){dep=deps[i];if(/\.js$/.test(dep)){continue;}if(!accedo.isNamespaceDefined(dep,scope)){setTimeout(function(){checkObjForContext(contextName);},objectCheckTimeout);return;}}context.callback();delete contextList[contextName];},completeLoad=function(name){loadedScripts[name]="complete";var contexts=getContextsByDependency(name),j=contexts.length,contextName,context,deps,i,scope,fullyLoaded;while(j--){contextName=contexts[j];context=contextList[contextName];deps=context.dependencies;i=deps.length;scope=context.scope;fullyLoaded=true;while(i--){if(loadedScripts[deps[i]]!="complete"){fullyLoaded=false;break;}}if(fullyLoaded){checkObjForContext(contextName);}}},load=function(name,url,contextID){var node=document.createElement("script");node.type="text/javascript";node.async=true;node.onload=node.onreadystatechange=function(){if(!node.readyState||/loaded|complete/.test(node.readyState)){node.onload=node.onreadystatechange=null;completeLoad(name);node=null;}};node.src=url;head.appendChild(node);};return function(dependencies,callback,scope){var context={callback:callback,scope:scope,dependencies:dependencies,checkTimes:0},contextID=REQ_CONTEXT_PREFIX+loadCounter++,i=0,len=dependencies.length,dep,scriptPath,hasWork=false;contextList[contextID]=context;for(;i<len;i++){dep=dependencies[i];if(loadedScripts[dep]=="loading"||loadedScripts[dep]=="complete"){continue;}else{loadedScripts[dep]="loading";}if(/\.js$/.test(dep)){scriptPath=dep;}else{if(accedo.isNamespaceDefined(dep)){continue;}scriptPath="js/"+dep.replace(/\./g,"/")+".js";}hasWork=true;load(dep,scriptPath,contextID);}if(!hasWork){checkObjForContext(contextID);}};})();return{rootScope:(function(){return this||(1,eval)("this");})(),$break:{},define:function(namespace,dependencies,constructor,scope){scope=scope||accedo.rootScope;var internalCallback=function(){var i,len,entities,root;if(namespace){entities=namespace.split(".");root=scope;len=entities.length;for(i=0;i<len;i++){root[entities[i]]=root[entities[i]]||{};root=root[entities[i]];}}try{if(namespace){(new Function("constructor",namespace+" = constructor();"))(constructor);}else{constructor();}}catch(ex){throw new Error("### Unable to prepare namespace "+namespace+" dependency (missing dependency?), "+ex);}};if(dependencies){require(dependencies,internalCallback,scope);}else{internalCallback();}},getNamespaceReference:function(namespace,scope){scope=scope||accedo.rootScope;return(new Function("scope","try { return scope."+namespace+"; } catch(ex) { return undefined; }"))(scope);},isNamespaceDefined:function(namespace,scope){return !!accedo.getNamespaceReference(namespace,scope);},getConfigParameter:function(param){var i,j,p,plen,kv,file,col,len;if(!accedo.configParameters){accedo.configParameters={};col=document.getElementsByTagName("script");len=col.length;for(i=0;i<len;i++){if(file=col[i].src.match(/accedo\.js(\?.*)?$/)){if(file[1]){p=file[1].substr(1,file[1].length).split(",");plen=p.length;for(j=0;j<plen;j++){kv=p[j].split("=");accedo.configParameters[kv[0]]=true;}}break;}}}return !!accedo.configParameters[param];},Try:function(){var returnValue,lambda,i=0,length=arguments.length;for(;i<length;i++){lambda=arguments[i];try{returnValue=lambda();break;}catch(e){}}return returnValue;},app:undefined,focus:{},utils:{},ui:{layout:{}},events:{}};})();}